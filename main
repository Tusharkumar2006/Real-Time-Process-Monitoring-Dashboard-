#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <time.h>

// Function to display system header info
void displaySystemInfo() {
    printf("===== SYSTEM INFORMATION =====\n");

    printf("User: ");
    system("whoami");

    printf("Hostname: ");
    system("hostname");

    printf("Date & Time: ");
    system("date");

    printf("Uptime: ");
    system("uptime -p");

    printf("\n");
}

// Function to display memory usage
void displayMemoryUsage() {
    printf("===== MEMORY USAGE =====\n");
    system("free -h");
    printf("\n");
}

// Function to display CPU usage (short snapshot)
void displayCPUUsage() {
    printf("===== CPU USAGE =====\n");
    printf("Note: %%CPU based on snapshot (not live average)\n");
    system("top -bn1 | grep '%Cpu'");
    printf("\n");
}

// Function to display top processes by CPU
void displayTopCPUProcesses() {
    printf("===== TOP 10 CPU-CONSUMING PROCESSES =====\n");
    system("ps -eo pid,comm,%cpu,%mem --sort=-%cpu | head -n 11");
    printf("\n");
}

// Function to display top processes by Memory
void displayTopMemProcesses() {
    printf("===== TOP 10 MEMORY-CONSUMING PROCESSES =====\n");
    system("ps -eo pid,comm,%cpu,%mem --sort=-%mem | head -n 11");
    printf("\n");
}

// Function to display disk usage
void displayDiskUsage() {
    printf("===== DISK USAGE =====\n");
    system("df -h");
    printf("\n");
}

// Function to draw a divider
void divider() {
    printf("--------------------------------------------------\n\n");
}

int main() {
    while (1) {
        // Clear the terminal screen
        system("clear");

        printf("üåê REAL-TIME PROCESS MONITORING DASHBOARD üåê\n");
        divider();

        // Show various system info
        displaySystemInfo();
        divider();

        displayCPUUsage();
        displayMemoryUsage();
        displayDiskUsage();
        divider();

        displayTopCPUProcesses();
        displayTopMemProcesses();

        // Sleep for 3 seconds before refreshing
        printf("üîÑ Refreshing in 3 seconds...\n");
        sleep(3);
    }

    return 0;
}
